package ${mybatisgen.p.get("basePackage")}.dao;
#set($mapperClass=$name.getMapperClassName($table))
#set($modelClass=$name.getModelClassName($table))
#set($modelVar=$name.getModelVarName($table))
#set($keyParameters=$code.getParameters($table.primaryKey.memberColumns))
#set($modelQueryClass=$name.getModelQueryClassName($table))
#set($modelQueryVar=$name.getModelQueryVarName($table))

import java.math.BigDecimal;
import java.util.List;
import org.apache.ibatis.annotations.Param;

import $name.getFullModelClassName($table);
import $name.getFullModelQueryClassName($table);

public interface $mapperClass {
	
	int deleteByPrimaryKey($keyParameters);
	
	#if($table.hasDeleteColumn())
	
	int logicalDeleteByPrimaryKey(
        		@Param("$table.primaryColumn.propertyName")$table.primaryColumn.javaType $table.primaryColumn.propertyName,
        		@Param("updateUserid")String updateUserid);
	#end

    int insert($table.modelName $modelVar);

    $table.modelName selectByPrimaryKey($keyParameters);

	$table.modelName selectByPrimaryKeyForUpdate($keyParameters);
	
    List<${modelClass}> selectAll();

	List<${modelClass}> query${modelClass}($modelQueryClass $modelQueryVar);
			
    int updateByPrimaryKey($table.modelName $modelVar);
	
	#if($table.hasStatusColumn())
		
	int changeStatus(
		@Param("$table.primaryColumn.propertyName")$table.primaryColumn.javaType $table.primaryColumn.propertyName,
		@Param("$table.statusColumn.propertyName")$table.statusColumn.javaType $table.statusColumn.propertyName,
		@Param("updateUserid")String updateUserid);
	#end
	#foreach($index in $table.indexes)
	#if($index.isUnique())
	
	$table.modelName ${sql.getIndexSelectName($index)}(${code.getDbParameters($index.memberColumns)});	
	#else
	
	List<${modelClass}> ${sql.getIndexSelectName($index)}(${code.getDbParameters($index.memberColumns)});
	#end
	#end


}