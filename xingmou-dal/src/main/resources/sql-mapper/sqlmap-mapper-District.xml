<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gi.xm.platform.dao.DistrictDAO">
	<resultMap id="BaseResultMap" type="com.gi.xm.platform.pojo.District">
					<id column="id" property="id" jdbcType="INTEGER" />
								<result column="name" property="name" jdbcType="VARCHAR" />
								<result column="level" property="level" jdbcType="TINYINT" />
								<result column="upid" property="upid" jdbcType="INTEGER" />
								<result column="type" property="type" jdbcType="INTEGER" />
								<result column="displayorder" property="displayorder" jdbcType="SMALLINT" />
						</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		DELETE FROM dw_v_district
		WHERE id = #{id,jdbcType=INTEGER} 
	</delete>
	
	<insert id="insert" parameterType="com.gi.xm.platform.pojo.District" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO dw_v_district (
			name,
			level,
			upid,
			type,
			displayorder
		)
		VALUES
		(
			#{name,jdbcType=VARCHAR},
			#{level,jdbcType=TINYINT},
			#{upid,jdbcType=INTEGER},
			#{type,jdbcType=INTEGER},
			#{displayorder,jdbcType=SMALLINT}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.gi.xm.platform.pojo.District">
		UPDATE dw_v_district
		SET
			<if test="name!=null and name!=''">name = #{name,jdbcType=s},</if>
			<if test="level!=null">level = #{level,jdbcType=TINYINT},</if>
			<if test="upid!=null">upid = #{upid,jdbcType=INTEGER},</if>
			<if test="type!=null">type = #{type,jdbcType=INTEGER},</if>
			<if test="displayorder!=null">displayorder = #{displayorder,jdbcType=SMALLINT},</if>
	    WHERE id = #{id,jdbcType=INTEGER} 
	</update>
	
		
		
	<sql id="selectFields">
	id,name,level,upid,type,displayorder
	</sql>
	
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
	</select>
	
	<select id="queryDistrict" resultMap="BaseResultMap" parameterType="com.gi.xm.platform.query.DistrictQuery">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
		<include refid="queryWhereAndOrder" />
	</select>
	
	<sql id="queryWhereAndOrder">
		<where>
					<if test="id!=null">AND id = #{id,jdbcType=INTEGER}</if>
								<if test="name!=null and name!=''">AND name = #{name,jdbcType=VARCHAR}</if>
								<if test="level!=null">AND level = #{level,jdbcType=TINYINT}</if>
								<if test="upid!=null">AND upid = #{upid,jdbcType=INTEGER}</if>
								<if test="type!=null">AND type = #{type,jdbcType=INTEGER}</if>
								<if test="displayorder!=null">AND displayorder = #{displayorder,jdbcType=SMALLINT}</if>
							
		</where>
		<choose>
			<when test="order!=null and orderBy!=null and order!='' and orderBy!=''">order by ${orderBy} ${order}</when>
			<otherwise>order by id desc</otherwise>
		</choose>
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
		WHERE id = #{id,jdbcType=INTEGER} 
	</select>

	<select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
		WHERE id = #{id,jdbcType=INTEGER} 
		FOR UPDATE
	</select>
			
	<select id="selectByTypeLevel" resultMap="BaseResultMap">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
		WHERE  type = #{type,jdbcType=INTEGER}
		AND level = #{level,jdbcType=TINYINT} 
	</select>
			
	<select id="selectByUpidDisplayorder" resultMap="BaseResultMap">
		SELECT
		<include refid="selectFields" />
		FROM dw_v_district
		WHERE  upid = #{upid,jdbcType=INTEGER}
		AND displayorder = #{displayorder,jdbcType=SMALLINT} 
	</select>
		
</mapper>