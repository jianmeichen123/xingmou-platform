<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gi.xm.report.dao.TargetIndustryHotDAO">
	<resultMap id="BaseResultMap" type="com.gi.xm.report.pojo.TargetIndustryHot">
					<id column="id" property="id" jdbcType="INTEGER" />
								<result column="industry_id" property="industryId" jdbcType="INTEGER" />
								<result column="industry_name" property="industryName" jdbcType="VARCHAR" />
								<result column="industry_level" property="industryLevel" jdbcType="INTEGER" />
								<result column="invest_hot" property="investHot" jdbcType="INTEGER" />
								<result column="invest_money_per_a" property="investMoneyPerA" jdbcType="BIGINT" />
								<result column="invest_money_per_b" property="investMoneyPerB" jdbcType="BIGINT" />
								<result column="invest_money_per_c" property="investMoneyPerC" jdbcType="BIGINT" />
								<result column="invest_money_per_d" property="investMoneyPerD" jdbcType="BIGINT" />
								<result column="invest_money_per_e" property="investMoneyPerE" jdbcType="BIGINT" />
								<result column="invest_money_per_f" property="investMoneyPerF" jdbcType="BIGINT" />
								<result column="invest_money_per_g" property="investMoneyPerG" jdbcType="BIGINT" />
								<result column="invest_money_per_h" property="investMoneyPerH" jdbcType="BIGINT" />
								<result column="invest_money_per_i" property="investMoneyPerI" jdbcType="BIGINT" />
								<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
								<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
						</resultMap>

<!-- 
	<insert id="insert" parameterType="com.gi.xm.report.pojo.TargetIndustryHot" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO dm_target_industry_hot (
			industry_id,
			industry_name,
			industry_level,
			invest_hot,
			invest_money_per_a,
			invest_money_per_b,
			invest_money_per_c,
			invest_money_per_d,
			invest_money_per_e,
			invest_money_per_f,
			invest_money_per_g,
			invest_money_per_h,
			invest_money_per_i,
			add_time,
			update_time
		)
		VALUES
		(
			#{industryId,jdbcType=INTEGER},
			#{industryName,jdbcType=VARCHAR},
			#{industryLevel,jdbcType=INTEGER},
			#{investHot,jdbcType=INTEGER},
			#{investMoneyPerA,jdbcType=BIGINT},
			#{investMoneyPerB,jdbcType=BIGINT},
			#{investMoneyPerC,jdbcType=BIGINT},
			#{investMoneyPerD,jdbcType=BIGINT},
			#{investMoneyPerE,jdbcType=BIGINT},
			#{investMoneyPerF,jdbcType=BIGINT},
			#{investMoneyPerG,jdbcType=BIGINT},
			#{investMoneyPerH,jdbcType=BIGINT},
			#{investMoneyPerI,jdbcType=BIGINT},
			#{addTime,jdbcType=TIMESTAMP},
			 UNIX_TIMESTAMP()
		)
	</insert> -->

	<sql id="selectFields">
	id,industry_id,industry_name,industry_level,invest_hot,invest_money_per_a,invest_money_per_b,invest_money_per_c,invest_money_per_d,invest_money_per_e,invest_money_per_f,invest_money_per_g,invest_money_per_h,invest_money_per_i,add_time,update_time
	</sql>
	
			
	<select id="selectByIndustryLevel" resultMap="BaseResultMap">
		SELECT
		<include refid="selectFields" />
		FROM dm_target_industry_hot
		WHERE invest_hot IS NOT NULL AND  industry_level = #{industryLevel,jdbcType=INTEGER}
		ORDER BY invest_hot DESC
	</select>
	

	<select id="queryTargetIndustryHot" resultMap="BaseResultMap" parameterType="com.gi.xm.report.query.TargetIndustryHotQueryInfo">
		SELECT
		<include refid="selectFields" />
		FROM dm_target_industry_hot
		<include refid="queryWhereAndOrder" />
	</select>

	<sql id="queryWhereAndOrder">
		<where>
					<if test="id!=null">AND id = #{id,jdbcType=INTEGER}</if>
								<if test="industryId!=null">AND industry_id = #{industryId,jdbcType=INTEGER}</if>
								<if test="industryName!=null and industryName!=''">AND industry_name = #{industryName,jdbcType=VARCHAR}</if>
								<if test="industryLevel!=null">AND industry_level = #{industryLevel,jdbcType=INTEGER}</if>
								<if test="investHot!=null">AND invest_hot = #{investHot,jdbcType=INTEGER}</if>
								<if test="investMoneyPerA!=null">AND invest_money_per_a = #{investMoneyPerA,jdbcType=BIGINT}</if>
								<if test="investMoneyPerB!=null">AND invest_money_per_b = #{investMoneyPerB,jdbcType=BIGINT}</if>
								<if test="investMoneyPerC!=null">AND invest_money_per_c = #{investMoneyPerC,jdbcType=BIGINT}</if>
								<if test="investMoneyPerD!=null">AND invest_money_per_d = #{investMoneyPerD,jdbcType=BIGINT}</if>
								<if test="investMoneyPerE!=null">AND invest_money_per_e = #{investMoneyPerE,jdbcType=BIGINT}</if>
								<if test="investMoneyPerF!=null">AND invest_money_per_f = #{investMoneyPerF,jdbcType=BIGINT}</if>
								<if test="investMoneyPerG!=null">AND invest_money_per_g = #{investMoneyPerG,jdbcType=BIGINT}</if>
								<if test="investMoneyPerH!=null">AND invest_money_per_h = #{investMoneyPerH,jdbcType=BIGINT}</if>
								<if test="investMoneyPerI!=null">AND invest_money_per_i = #{investMoneyPerI,jdbcType=BIGINT}</if>
								<if test="addTime!=null">AND add_time = #{addTime,jdbcType=TIMESTAMP}</if>
								<if test="updateTime!=null">AND update_time = #{updateTime,jdbcType=TIMESTAMP}</if>
					
		</where>
		<choose>
			<when test="order!=null and orderBy!=null and order!='' and orderBy!=''">order by ${orderBy} ${order}</when>
			<otherwise>order by invest_hot desc</otherwise>
		</choose>
	</sql>

</mapper>