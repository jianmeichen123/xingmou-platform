<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gi.xm.platform.dao.DataDAO">
	<resultMap id="BaseResultMap" type="com.gi.xm.platform.pojo.Data">
					<id column="id" property="id" jdbcType="INTEGER" />
								<result column="project_num" property="projectNum" jdbcType="INTEGER" />
								<result column="project_invested_num" property="projectInvestedNum" jdbcType="INTEGER" />
								<result column="invested_money" property="investedMoney" jdbcType="BIGINT" />
								<result column="invested_money_per_project" property="investedMoneyPerProject" jdbcType="BIGINT" />
								<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
								<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		             			<result column="investfirm_num" property="investfirmNum" jdbcType="INTEGER" />

	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		DELETE FROM dm_data
		WHERE id = #{id,jdbcType=INTEGER} 
	</delete>
	
	<insert id="insert" parameterType="com.gi.xm.platform.pojo.Data" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO dm_data (
			project_num,
			project_invested_num,
			invested_money,
			invested_money_per_project,
			add_time,
			update_time
		)
		VALUES
		(
			#{projectNum,jdbcType=INTEGER},
			#{projectInvestedNum,jdbcType=INTEGER},
			#{investedMoney,jdbcType=BIGINT},
			#{investedMoneyPerProject,jdbcType=BIGINT},
			#{addTime,jdbcType=TIMESTAMP},
			 UNIX_TIMESTAMP()
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.gi.xm.platform.pojo.Data">
		UPDATE dm_data
		SET
			<if test="projectNum!=null">project_num = #{projectNum,jdbcType=INTEGER},</if>
			<if test="projectInvestedNum!=null">project_invested_num = #{projectInvestedNum,jdbcType=INTEGER},</if>
			<if test="investedMoney!=null">invested_money = #{investedMoney,jdbcType=BIGINT},</if>
			<if test="investedMoneyPerProject!=null">invested_money_per_project = #{investedMoneyPerProject,jdbcType=BIGINT},</if>
			<if test="addTime!=null">add_time = #{addTime,jdbcType=TIMESTAMP},</if>
	    WHERE id = #{id,jdbcType=INTEGER} 
	</update>
	
		
		
	<sql id="selectFields">
	id,project_num,project_invested_num,invested_money,investfirm_num,invested_money_per_project,add_time,update_time
	</sql>
	
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="selectFields" />
		FROM dm_data
	</select>
	
	<select id="queryData" resultMap="BaseResultMap" parameterType="com.gi.xm.platform.query.DataQuery">
		SELECT
		<include refid="selectFields" />
		FROM dm_data
		<include refid="queryWhereAndOrder" />
	</select>
	
	<sql id="queryWhereAndOrder">
		<where>
					<if test="id!=null">AND id = #{id,jdbcType=INTEGER}</if>
								<if test="projectNum!=null">AND project_num = #{projectNum,jdbcType=INTEGER}</if>
								<if test="projectInvestedNum!=null">AND project_invested_num = #{projectInvestedNum,jdbcType=INTEGER}</if>
								<if test="investedMoney!=null">AND invested_money = #{investedMoney,jdbcType=BIGINT}</if>
								<if test="investedMoneyPerProject!=null">AND invested_money_per_project = #{investedMoneyPerProject,jdbcType=BIGINT}</if>
								<if test="addTime!=null">AND add_time = #{addTime,jdbcType=TIMESTAMP}</if>
								<if test="updateTime!=null">AND update_time = #{updateTime,jdbcType=TIMESTAMP}</if>
							
		</where>
		<choose>
			<when test="order!=null and orderBy!=null and order!='' and orderBy!=''">order by ${orderBy} ${order}</when>
			<otherwise>order by id desc</otherwise>
		</choose>
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="selectFields" />
		FROM dm_data
		limit 1
	</select>

	<select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="selectFields" />
		FROM dm_data
		WHERE id = #{id,jdbcType=INTEGER} 
		FOR UPDATE
	</select>
		
</mapper>